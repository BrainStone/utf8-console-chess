plugins {
    id 'cpp-application'
    id 'visual-studio'
}

application {
    targetMachines = [
        machines.windows.x86_64,
        machines.linux.x86_64,
        machines.macOS.x86_64
    ]
}

tasks.withType(CppCompile).configureEach {
    compilerArgs.addAll toolChain.map { toolChain ->
        if (toolChain in Gcc || toolChain in Clang) {
            return ['-std=c++17', '-Wall', '-Wextra', '-Wpedantic', '-Werror']
        } else if (toolChain in VisualCpp) {
            return ['/EHsc', '/std:c++17', '/W3', '/WX']
        }
        return []
    }
}

tasks.withType(AbstractLinkTask).configureEach {
    linkerArgs.addAll toolChain.map { toolChain ->
        if (toolChain in Gcc || toolChain in Clang) {
            return ['-std=c++17', '-Wall', '-Wextra', '-Wpedantic', '-Werror', '-lstdc++fs']
        } else if (toolChain in VisualCpp) {
            return ['/std:c++17', '/W3', '/WX']
        }
        return []
    }
}
